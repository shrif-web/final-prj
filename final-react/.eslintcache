[{"/home/atena/Desktop/final-prj/final-react/src/index.js":"1","/home/atena/Desktop/final-prj/final-react/src/App.js":"2","/home/atena/Desktop/final-prj/final-react/src/reportWebVitals.js":"3","/home/atena/Desktop/final-prj/final-react/src/Routes.js":"4","/home/atena/Desktop/final-prj/final-react/src/libs/contextLib.js":"5","/home/atena/Desktop/final-prj/final-react/src/containers/Home.js":"6","/home/atena/Desktop/final-prj/final-react/src/containers/Login.js":"7","/home/atena/Desktop/final-prj/final-react/src/containers/Signup.js":"8","/home/atena/Desktop/final-prj/final-react/src/containers/UserDashboard.js":"9","/home/atena/Desktop/final-prj/final-react/src/components/UnauthenticatedRoute.js":"10","/home/atena/Desktop/final-prj/final-react/src/components/AuthenticatedRoute.js":"11","/home/atena/Desktop/final-prj/final-react/src/containers/Dashboard.js":"12","/home/atena/Desktop/final-prj/final-react/src/components/Footer.js":"13","/home/atena/Desktop/final-prj/final-react/src/libs/hooksLib.js":"14","/home/atena/Desktop/final-prj/final-react/src/components/TopDishes.js":"15","/home/atena/Desktop/final-prj/final-react/src/components/Middle.js":"16","/home/atena/Desktop/final-prj/final-react/src/components/About.js":"17","/home/atena/Desktop/final-prj/final-react/src/components/Header.js":"18","/home/atena/Desktop/final-prj/final-react/src/Parse.js":"19"},{"size":658,"mtime":1613281519184,"results":"20","hashOfConfig":"21"},{"size":2791,"mtime":1613289998808,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1613281519184,"results":"23","hashOfConfig":"21"},{"size":1007,"mtime":1613281519176,"results":"24","hashOfConfig":"21"},{"size":169,"mtime":1613281519184,"results":"25","hashOfConfig":"21"},{"size":492,"mtime":1613281519176,"results":"26","hashOfConfig":"21"},{"size":2132,"mtime":1613281519176,"results":"27","hashOfConfig":"21"},{"size":2972,"mtime":1613281519176,"results":"28","hashOfConfig":"21"},{"size":7198,"mtime":1613298631343,"results":"29","hashOfConfig":"21"},{"size":840,"mtime":1613281519176,"results":"30","hashOfConfig":"21"},{"size":490,"mtime":1613281519176,"results":"31","hashOfConfig":"21"},{"size":11338,"mtime":1613291609921,"results":"32","hashOfConfig":"21"},{"size":4043,"mtime":1613281519176,"results":"33","hashOfConfig":"21"},{"size":290,"mtime":1613281519184,"results":"34","hashOfConfig":"21"},{"size":3065,"mtime":1613281519176,"results":"35","hashOfConfig":"21"},{"size":1784,"mtime":1613281519176,"results":"36","hashOfConfig":"21"},{"size":1721,"mtime":1613281519176,"results":"37","hashOfConfig":"21"},{"size":1590,"mtime":1613281519176,"results":"38","hashOfConfig":"21"},{"size":133,"mtime":1613289998808,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1o18aca",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/atena/Desktop/final-prj/final-react/src/index.js",[],["81","82"],"/home/atena/Desktop/final-prj/final-react/src/App.js",[],"/home/atena/Desktop/final-prj/final-react/src/reportWebVitals.js",[],"/home/atena/Desktop/final-prj/final-react/src/Routes.js",[],"/home/atena/Desktop/final-prj/final-react/src/libs/contextLib.js",[],"/home/atena/Desktop/final-prj/final-react/src/containers/Home.js",[],"/home/atena/Desktop/final-prj/final-react/src/containers/Login.js",[],"/home/atena/Desktop/final-prj/final-react/src/containers/Signup.js",["83"],"import React, { useState } from \"react\";\nimport { Alert, Form, Button } from \"react-bootstrap\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport Cookies from \"js-cookie\";\nimport \"./Signup.css\";\nvar Parse = require('parse');\n\nexport default function Signup() {\n  const [fields, handleFieldChange] = useFormFields({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const { userHasAuthenticated } = useAppContext();\n  const history = useHistory();\n  const [error, setError] = useState([]);\n\n  function validateForm() {\n    return (\n      fields.username.length > 0 &&\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    userHasAuthenticated(true);\n    Cookies.set(\"user\", \"true\");\n    history.push(\"/\");\n    alert(\"Signed up and logged in\");\n    //TODO\n  }\n\n  function handleClose() {\n    setError([]);\n  }\n\n  return (\n    <div className=\"Signup \">\n      <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 pt-3\" id=\"alert\">\n        {error.map((msg, index) => (\n          <Alert variant=\"danger\" key={index} onClose={handleClose} dismissible>\n            <Alert.Heading>Error</Alert.Heading>\n            <p>{msg}</p>\n          </Alert>\n        ))}\n      </div>\n\n      <Form\n        onSubmit={handleSubmit}\n        style={{\n          marginTop: \"15vh\",\n          backgroundColor: \"white\",\n          padding: \"25px\",\n        }}\n      >\n        <Form.Group controlId=\"username\" size=\"lg\">\n          <Form.Label>نام کاربری</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"text\"\n            value={fields.username}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"email\" size=\"lg\">\n          <Form.Label>ایمیل</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\" size=\"lg\">\n          <Form.Label>رمز عبور</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\" size=\"lg\">\n          <Form.Label>تکرار رمز عبور</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword}\n          />\n        </Form.Group>\n\n        <Button\n          block\n          size=\"lg\"\n          type=\"submit\"\n          varient=\"success\"\n          disabled={!validateForm()}\n        >\n          ثبت نام\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","/home/atena/Desktop/final-prj/final-react/src/containers/UserDashboard.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/UnauthenticatedRoute.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/AuthenticatedRoute.js",[],"/home/atena/Desktop/final-prj/final-react/src/containers/Dashboard.js",["84"],"import React, { useState, useEffect  } from \"react\";\nimport { Accordion, Card, Table, Form, Button } from \"react-bootstrap\";\nimport \"./Dashboard.css\";\nvar Parse = require('parse');\n\nexport default function Dashboard() {\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    console.log(\"hi\");\n    const Ingredient = Parse.Object.extend(\"Ingredient\");\n    const query = new Parse.Query(Ingredient);\n    const results = await query.find();\n    console.log(results.length);\n    var mIngredients = []\n    for (let i = 0; i < results.length; i++) {\n      const object = results[i];\n      mIngredients[i]={Id:i+1,Name:object.get(\"name\"),category:object.get(\"type\")};\n    }\n    setIngredients(mIngredients);\n\n    const Food = Parse.Object.extend(\"Food\");\n    const query2 = new Parse.Query(Food);\n    const results2 = await query2.find();\n    console.log(results2.length);\n    var mFoods = []\n    for (let i = 0; i < results2.length; i++) {\n      const object = results2[i];\n      var ingredients2 = object.relation(\"ingredients\");\n      ingredients2 = await ingredients2.query().find();\n      var j=0;\n      var mstr = \"\";\n      for(let j = 0; j < ingredients2.length; j++){\n        mstr=mstr+' '+ingredients2[j].get(\"name\");\n      }\n      mFoods[i]={Id:i+1,Name:object.get(\"name\"),link:object.get(\"link\"),Ingredients:mstr};\n      \n    }\n    setFoods(mFoods);\n\n  }\n\n  const [nFoodName, setNFoodName] = useState(\"\");\n  const [nFoodLink, setNFoodLink] = useState(\"\");\n  const [nFoodIngredients, setNFoodIngredients] = useState([]);\n  const [nIngName, setNIngName] = useState(\"\");\n  const [nIngCategory, setNIngCategory] = useState(\"\");\n\n  const [foods, setFoods] = useState([]);\n  //   { Id: \"1\", Name: \"food 1\", link: \"www.google.com\", Ingredients: \"egg\" },\n  //   { Id: \"2\", Name: \"food 2\", link: \"www.google.com\", Ingredients: \"egg\" },\n  //   { Id: \"3\", Name: \"food 3\", link: \"www.google.com\", Ingredients: \"egg\" },\n  // ]);\n\n  const [ingredients, setIngredients] = useState([{}]);\n  // ([\n  //   { Id: \"1\", Name: \"Ingredient 1\", category: \"dairy\" },\n  //   { Id: \"2\", Name: \"Ingredient 2\", category: \"dairy\" },\n  //   { Id: \"3\", Name: \"Ingredient 3\", category: \"dairy\" },\n  // ]);\n \n\n\n\n  async function handleCreateFood() {\n    // setFoods([\n    //   ...foods,\n    //   {\n    //     Id: foods.length,\n    //     Name: nFoodName,\n    //     link: nFoodLink,\n    //     Ingredients: nFoodIngredients.toString,\n    //   },\n    // ]);\n \n    try {\n\n      const Food = Parse.Object.extend(\"Food\");\n      const food = new Food();\n      food.set(\"name\", nFoodName);\n      food.set(\"link\", nFoodLink);\n      const relation = food.relation(\"ingredients\");\n      var i;\n      for (i = 0; i < nFoodIngredients.length; i++) {\n        alert(\"start\");\n        console.log(nFoodIngredients[i]);\n        var query = new Parse.Query(\"Ingredient\");\n        alert(nFoodIngredients[i]);\n        query.equalTo(\"name\", nFoodIngredients[i]);\n        // const result = await query.find();\n        alert(\"result\");\n        // query.find().then(\n        //   function(value) { alert(\"find\");alert(value[0]);relation.add(value[0]);/* code if successful */ },\n        //   function(error) { alert(error.message); }\n        // );\n        var result;\n        try{\n        result = await query.find()\n        }\n        catch{\n          alert('me')\n        }\n             alert(\"find\");\n             alert(result);\n             relation.add(result[0]);/* code if successful */ \n            \n        // console.log(\"ingre -> \",result.length);\n      }\n      \n      await food.save();\n      \n      alert(\"food saved.\");\n    } catch (error) {\n      alert(\"error ---> \",error.message);\n    }\n    alert(\"New food created\");\n  }\n\n  function validateNewFood() {\n    return (\n      nFoodIngredients.length > 0 &&\n      nFoodLink.length > 0 &&\n      nFoodName.length > 0\n    );\n  }\n  async function handleCreateIng() {\n\n    try{\n      const Ingredient = Parse.Object.extend(\"Ingredient\");\n      const ingredient = new Ingredient();\n      ingredient.set(\"name\", nIngName);\n      ingredient.set(\"type\", nIngCategory);\n      await ingredient.save();\n    }catch(error){\n      console.log(error.message);\n    }\n    alert(\"New ingredient created\");\n  }\n\n  function validateNewIng() {\n    return nIngName.length > 0 && nIngCategory.length > 0;\n  }\n\n  function onIngredientChange(e, name) {\n    console.log(\"------------------------> hi\");\n    if (nFoodIngredients.includes(name)) {\n      var arr = nFoodIngredients.filter(function (item) {\n        return item !== name;\n      });\n      setNFoodIngredients(arr);\n    } else {\n      setNFoodIngredients([...nFoodIngredients, name]);\n    }\n  }\n\n  return (\n    <div className=\"Dashboard\">\n      <h1 style={{ paddingTop: \"10%\" }}>It's Admin Dashboard</h1>\n      <div className=\"dashboard-nav container\">\n        <Accordion defaultActiveKey=\"0\">\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              غذاها\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>نام غذا</th>\n                      <th>لینک دستور غذایی</th>\n                      <th>مواد اولیه</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {foods.map((food, index) => (\n                      <tr key={index}>\n                        <td>{food.Id}</td>\n                        <td>{food.Name}</td>\n                        <td>{food.link}</td>\n                        <td>{food.Ingredients}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n              اضافه کردن غذا\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"1\">\n              <Card.Body>\n                <Card.Body>\n                  <div className=\"col-md-6\">\n                    <Form onSubmit={handleCreateFood}>\n                      <Form.Group controlId=\"foodName\" size=\"lg\">\n                        <Form.Label>نام غذا</Form.Label>\n                        <Form.Control\n                          autoFocus\n                          type=\"text\"\n                          value={nFoodName}\n                          onChange={(e) => setNFoodName(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"foodLink\" size=\"lg\">\n                        <Form.Label>لینک دستور غذایی</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          value={nFoodLink}\n                          onChange={(e) => setNFoodLink(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"foodIngredients\" size=\"lg\">\n                        <Form.Label>مواد اولیه</Form.Label>\n                        {ingredients.map((ingredient, index) => (\n                          <Form.Check\n                            inline\n                            label={ingredient.Name}\n                            type=\"checkbox\"\n                            key={`inline-${ingredient.id}`}\n                            id={`ing-${index}`}\n                            value={ingredient.Name}\n                            onChange={(e) =>\n                              onIngredientChange(e, ingredient.Name)\n                            }\n                          />\n                        ))}\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.File id=\"foodImage\" label=\"فایل تصویر غذا\" />\n                      </Form.Group>\n                      <Button\n                        block\n                        size=\"lg\"\n                        type=\"submit\"\n                        varient=\"success\"\n                        disabled={!validateNewFood()}\n                      >\n                        اضافه کردن غذا به لیست\n                      </Button>\n                    </Form>\n                  </div>\n                </Card.Body>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n              مواد اولیه\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"2\">\n              <Card.Body>\n                <Card.Body>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>نام ماده غذایی</th>\n                        <th>نوع</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {ingredients.map((ingredient, index) => (\n                        <tr key={index}>\n                          <td>{ingredient.Id}</td>\n                          <td>{ingredient.Name}</td>\n                          <td>{ingredient.category}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n              اضافه کردن ماده اولیه\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"3\">\n              <Card.Body>\n                <Card.Body>\n                  <div className=\"col-md-6\">\n                    <Form onSubmit={handleCreateIng}>\n                      <Form.Group controlId=\"ingName\" size=\"lg\">\n                        <Form.Label>نام ماده غذایی</Form.Label>\n                        <Form.Control\n                          autoFocus\n                          type=\"text\"\n                          value={nIngName}\n                          onChange={(e) => setNIngName(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"ingcategory\" size=\"lg\">\n                        <Form.Label>نوع ماده غذایی</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          value={nIngCategory}\n                          onChange={(e) => setNIngCategory(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Button\n                        block\n                        size=\"lg\"\n                        type=\"submit\"\n                        varient=\"success\"\n                        disabled={!validateNewIng()}\n                      >\n                        اضافه کردن ماده غذایی به لیست\n                      </Button>\n                    </Form>\n                  </div>\n                </Card.Body>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n","/home/atena/Desktop/final-prj/final-react/src/components/Footer.js",[],"/home/atena/Desktop/final-prj/final-react/src/libs/hooksLib.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/TopDishes.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/Middle.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/About.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/Header.js",[],"/home/atena/Desktop/final-prj/final-react/src/Parse.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":8,"column":5,"nodeType":"91","messageId":"92","endLine":8,"endColumn":10},{"ruleId":"89","severity":1,"message":"93","line":34,"column":11,"nodeType":"91","messageId":"92","endLine":34,"endColumn":12},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Parse' is assigned a value but never used.","Identifier","unusedVar","'j' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]