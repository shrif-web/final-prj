[{"/home/atena/Desktop/final-prj/final-react/src/index.js":"1","/home/atena/Desktop/final-prj/final-react/src/App.js":"2","/home/atena/Desktop/final-prj/final-react/src/reportWebVitals.js":"3","/home/atena/Desktop/final-prj/final-react/src/Routes.js":"4","/home/atena/Desktop/final-prj/final-react/src/libs/contextLib.js":"5","/home/atena/Desktop/final-prj/final-react/src/containers/Search.js":"6","/home/atena/Desktop/final-prj/final-react/src/containers/Signup.js":"7","/home/atena/Desktop/final-prj/final-react/src/containers/Login.js":"8","/home/atena/Desktop/final-prj/final-react/src/containers/Home.js":"9","/home/atena/Desktop/final-prj/final-react/src/containers/UserDashboard.js":"10","/home/atena/Desktop/final-prj/final-react/src/components/AuthenticatedRoute.js":"11","/home/atena/Desktop/final-prj/final-react/src/components/UnauthenticatedRoute.js":"12","/home/atena/Desktop/final-prj/final-react/src/containers/Dashboard.js":"13","/home/atena/Desktop/final-prj/final-react/src/Parse.js":"14","/home/atena/Desktop/final-prj/final-react/src/components/TopDishes.js":"15","/home/atena/Desktop/final-prj/final-react/src/components/Middle.js":"16","/home/atena/Desktop/final-prj/final-react/src/components/Footer.js":"17","/home/atena/Desktop/final-prj/final-react/src/components/About.js":"18","/home/atena/Desktop/final-prj/final-react/src/components/Header.js":"19","/home/atena/Desktop/final-prj/final-react/src/libs/hooksLib.js":"20"},{"size":658,"mtime":1613499431123,"results":"21","hashOfConfig":"22"},{"size":2989,"mtime":1613567156584,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1613499431123,"results":"24","hashOfConfig":"22"},{"size":1118,"mtime":1613499431115,"results":"25","hashOfConfig":"22"},{"size":169,"mtime":1613499431123,"results":"26","hashOfConfig":"22"},{"size":8566,"mtime":1613596264928,"results":"27","hashOfConfig":"22"},{"size":3306,"mtime":1613564045023,"results":"28","hashOfConfig":"22"},{"size":2660,"mtime":1613499431115,"results":"29","hashOfConfig":"22"},{"size":492,"mtime":1613499431115,"results":"30","hashOfConfig":"22"},{"size":7806,"mtime":1613596661337,"results":"31","hashOfConfig":"22"},{"size":490,"mtime":1613499431115,"results":"32","hashOfConfig":"22"},{"size":840,"mtime":1613499431115,"results":"33","hashOfConfig":"22"},{"size":11731,"mtime":1613591696516,"results":"34","hashOfConfig":"22"},{"size":133,"mtime":1613499431115,"results":"35","hashOfConfig":"22"},{"size":5859,"mtime":1613576991277,"results":"36","hashOfConfig":"22"},{"size":1784,"mtime":1613499431115,"results":"37","hashOfConfig":"22"},{"size":4043,"mtime":1613499431115,"results":"38","hashOfConfig":"22"},{"size":1721,"mtime":1613499431115,"results":"39","hashOfConfig":"22"},{"size":1596,"mtime":1613567955311,"results":"40","hashOfConfig":"22"},{"size":290,"mtime":1613499431123,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"y0hmw0",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/atena/Desktop/final-prj/final-react/src/index.js",[],["87","88"],"/home/atena/Desktop/final-prj/final-react/src/App.js",["89"],"import React, { useState, useEffect } from \"react\";\nimport { AppContext } from \"./libs/contextLib\";\nimport Routes from \"./Routes\";\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport \"./App.css\";\n\nimport Parse from \"./Parse.js\";\n\nfunction App() {\n  const history = useHistory();\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    const user = Cookies.get(\"user\");\n    if (user) {\n      userHasAuthenticated(true);\n    }\n  }\n\n  function handleLogout() {\n    Cookies.remove(\"user\");\n    userHasAuthenticated(false);\n  }\n\n  function handledashboard(){\n\n    if (Parse.User.current().get('isAdmin') ==  true)\n    {\n      \n      history.push(\"./dashboard\");\n      return \n    }\n\n    history.push(\"/user-dashboard\")\n  }\n\n  return (\n    <div>\n      <div className=\"App container\">\n        <Navbar\n          fixed=\"top\"\n          collapseOnSelect\n          bg=\"white\"\n          expand=\"sm\"\n          className=\"navbar-light mb-3\"\n        >\n          <Navbar.Brand href=\"/\" className=\"font-weight-bold\">\n            <img\n              alt=\"\"\n              src=\"./logo.png\"\n              width=\"50\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n            />\n          </Navbar.Brand>\n\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav>\n              {isAuthenticated ? (\n                <>\n                  <Button\n                    variant=\"outline-primary\"\n                    className=\"nav-btn1\"\n                    size=\"sm\"\n                    onClick={handledashboard}\n                  >\n                    پنل کاربری\n                  </Button>\n                  <Button\n                    onClick={handleLogout}\n                    variant=\"outline-primary\"\n                    className=\"nav-btn2\"\n                    size=\"sm\"\n                    href=\"/login\"\n                  >\n                    خروج\n                  </Button>\n                </>\n              ) : (\n                <>\n                  <Button\n                    variant=\"outline-primary\"\n                    className=\"nav-btn1\"\n                    size=\"sm\"\n                    href=\"/login\"\n                  >\n                    ورود\n                  </Button>{\" \"}\n                  <Button\n                    variant=\"outline-primary\"\n                    className=\"nav-btn2\"\n                    size=\"sm\"\n                    href=\"/signup\"\n                  >\n                    ثبت نام\n                  </Button>{\" \"}\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n      <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n        <Routes />\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/home/atena/Desktop/final-prj/final-react/src/reportWebVitals.js",[],"/home/atena/Desktop/final-prj/final-react/src/Routes.js",[],"/home/atena/Desktop/final-prj/final-react/src/libs/contextLib.js",[],"/home/atena/Desktop/final-prj/final-react/src/containers/Search.js",["90","91","92","93","94","95","96"],"/home/atena/Desktop/final-prj/final-react/src/containers/Signup.js",[],"/home/atena/Desktop/final-prj/final-react/src/containers/Login.js",["97","98"],"import React, { useState } from \"react\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport Cookies from \"js-cookie\";\nimport \"./Login.css\";\nimport { useHistory } from \"react-router-dom\";\n\n\nimport Parse from \"../Parse.js\";\n\n\nexport default function Login() {\n  const { userHasAuthenticated } = useAppContext();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState([]);\n  const history = useHistory();\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    // event.preventDefault();\n    // userHasAuthenticated(true);\n    // Cookies.set(\"user\", \"true\");\n    // alert(\"Logged in\");\n\n    event.preventDefault();\n    //\n    // alert(\"log in!\");\n\n    try {\n      const user = await Parse.User.logIn(username, password);\n      console.log(\"login successfully\");\n      userHasAuthenticated(true);\n      Cookies.set(\"user\", username);\n     // history.push(\"/dashboard\");\n    } catch (error) {\n      console.log(\"wrong email or password.\");\n      setError(\"wrong email or password\");\n    }\n  }\n\n  function handleClose() {\n    setError([]);\n  }\n\n  return (\n    <div className=\"Login\">\n      {error.map((msg, index) => (\n        <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 pt-3\" id=\"alert\">\n          <Alert variant=\"danger\" key={index} onClose={handleClose} dismissible>\n            <Alert.Heading>Error</Alert.Heading>\n            <p>{msg}</p>\n          </Alert>\n        </div>\n      ))}\n\n      <div style={{ marginTop: \"15vh\", width: \"auto\" }}>\n        <Form onSubmit={handleSubmit} style={{ backgroundColor: \"white\" }}>\n          <Form.Group size=\"xl\" controlId=\"username\">\n            <Form.Label>نام کاربری</Form.Label>\n            <Form.Control\n              autoFocus\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group size=\"xl\" controlId=\"password\">\n            <Form.Label>رمز عبور</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Button block size=\"xl\" type=\"submit\" disabled={!validateForm()}>\n            ورود\n          </Button>\n          <p className=\"m-3\">\n            حساب کاربری ندارید؟\n            <a href=\"/signup\">همین حالا ثبت نام کنید </a>\n          </p>\n        </Form>\n      </div>\n    </div>\n  );\n}\n","/home/atena/Desktop/final-prj/final-react/src/containers/Home.js",[],"/home/atena/Desktop/final-prj/final-react/src/containers/UserDashboard.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/AuthenticatedRoute.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/UnauthenticatedRoute.js",[],"/home/atena/Desktop/final-prj/final-react/src/containers/Dashboard.js",["99","100","101"],"import React, { useState, useEffect  } from \"react\";\nimport { Accordion, Card, Table, Form, Button } from \"react-bootstrap\";\nimport \"./Dashboard.css\";\n\nimport Parse from \"../Parse.js\";\n\nexport default function Dashboard() {\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n\n    const Ingredient = Parse.Object.extend(\"Ingredient\");\n    const query = new Parse.Query(Ingredient);\n    const results = await query.find();\n    console.log(results.length);\n    var mIngredients = []\n    for (let i = 0; i < results.length; i++) {\n      const object = results[i];\n      mIngredients[i]={Id:i+1,Name:object.get(\"name\"),category:object.get(\"type\")};\n    }\n    setIngredients(mIngredients);\n\n    const Food = Parse.Object.extend(\"Food\");\n    const query2 = new Parse.Query(Food);\n    const results2 = await query2.find();\n    console.log(results2.length);\n    var mFoods = []\n    for (let i = 0; i < results2.length; i++) {\n      const object = results2[i];\n      var ingredients2 = object.relation(\"ingredients\");\n      ingredients2 = await ingredients2.query().find();\n      var j=0;\n      var mstr = \"\";\n      for(let j = 0; j < ingredients2.length; j++){\n        mstr=mstr+' - '+ingredients2[j].get(\"name\");\n      }\n      mstr = mstr.substring(2,mstr.length);\n      mFoods[i]={Id:i+1,Name:object.get(\"name\"),link:object.get(\"link\"),Ingredients:mstr};\n      \n    }\n    setFoods(mFoods);\n\n  }\n\n  const [nFoodName, setNFoodName] = useState(\"\");\n  const [nFoodLink, setNFoodLink] = useState(\"\");\n  const [nFoodIngredients, setNFoodIngredients] = useState([]);\n  const [nIngName, setNIngName] = useState(\"\");\n  const [nIngCategory, setNIngCategory] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [src , setSrc] = useState(\"\");\n\n  const [foods, setFoods] = useState([]);\n  //   { Id: \"1\", Name: \"food 1\", link: \"www.google.com\", Ingredients: \"egg\" },\n  //   { Id: \"2\", Name: \"food 2\", link: \"www.google.com\", Ingredients: \"egg\" },\n  //   { Id: \"3\", Name: \"food 3\", link: \"www.google.com\", Ingredients: \"egg\" },\n  // ]);\n\n  const [ingredients, setIngredients] = useState([{}]);\n  // ([\n  //   { Id: \"1\", Name: \"Ingredient 1\", category: \"dairy\" },\n  //   { Id: \"2\", Name: \"Ingredient 2\", category: \"dairy\" },\n  //   { Id: \"3\", Name: \"Ingredient 3\", category: \"dairy\" },\n  // ]);\n \n\n\n\n  async function handleCreateFood() {\n\n    try {\n\n      var Food = Parse.Object.extend(\"Food\");\n      var food = new Food();\n      food.set(\"name\", nFoodName);\n      food.set(\"link\", nFoodLink);\n      food.set(\"imagesrc\" ,  src);\n      food.set(\"score\" ,0);\n\n      var relation = food.relation(\"ingredients\");\n      var query = new Parse.Query(\"Ingredient\");\n      query.containedIn(\"name\",nFoodIngredients);\n     \n      query.find().then(results => {\n        relation.add(results);\n        food.save().then(\n          results => {\n            window.location.reload();\n            \n        }).catch(error2 => {\n            alert(error2);\n        });\n    }).catch(error => {\n        alert(error);\n    });\n  \n    } catch (error) {\n      alert(\"error ---> \",error.message);\n    }\n    // alert(\"New food created\");\n    // window.location.reload();\n  }\n\n  function validateNewFood() {\n    return (\n      nFoodIngredients.length > 0 &&\n      nFoodLink.length > 0 &&\n      nFoodName.length > 0\n    );\n  }\n  async function handleCreateIng(e) {\n    e.preventDefault();\n\n    try{\n      const Ingredient = Parse.Object.extend(\"Ingredient\");\n      const ingredient = new Ingredient();\n      ingredient.set(\"name\", nIngName);\n      ingredient.set(\"type\", nIngCategory);\n      await ingredient.save();\n\n      // setFoods([\n      //   ...foods ,\n      //   {\n      //     name : nIngName, type:nIngCategory\n      //   }\n      //  ]);\n      onLoad();\n    }catch(error){\n      console.log(error.message);\n    }\n    alert(\"New ingredient created\");\n  }\n\n  function validateNewIng() {\n    return nIngName.length > 0 && nIngCategory.length > 0;\n  }\n\n  function onIngredientChange(e, name) {\n    console.log(\"------------------------> hi\");\n    if (nFoodIngredients.includes(name)) {\n      var arr = nFoodIngredients.filter(function (item) {\n        return item !== name;\n      });\n      setNFoodIngredients(arr);\n    } else {\n      setNFoodIngredients([...nFoodIngredients, name]);\n    }\n  }\n  function onFileChange (event){\n    setSelectedFile(event.target.files[0]);\n  };\n  return (\n    <div className=\"Dashboard\">\n      <h1 style={{ paddingTop: \"10%\" }}>It's Admin Dashboard</h1>\n      <div className=\"dashboard-nav container\">\n        <Accordion defaultActiveKey=\"0\">\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              غذاها\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>نام غذا</th>\n                      <th>لینک دستور غذایی</th>\n                      <th>مواد اولیه</th>\n\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {foods.map((food, index) => (\n                      <tr key={index}>\n                        <td>{food.Id}</td>\n                        <td>{food.Name}</td>\n                        <td>{food.link}</td>\n                        <td>{food.Ingredients}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n              اضافه کردن غذا\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"1\">\n              <Card.Body>\n                <Card.Body>\n                  <div className=\"col-md-6\">\n                    <Form \n                    onSubmit={e => {e.preventDefault();}} \n                    // onSubmit={handleCreateFood}\n                    >\n                      <Form.Group controlId=\"foodName\" size=\"lg\">\n                        <Form.Label>نام غذا</Form.Label>\n                        <Form.Control\n                          autoFocus\n                          type=\"text\"\n                          value={nFoodName}\n                          onChange={(e) => setNFoodName(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"foodLink\" size=\"lg\">\n                        <Form.Label>لینک دستور غذایی</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          value={nFoodLink}\n                          onChange={(e) => setNFoodLink(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"foodLink\" size=\"lg\">\n                        <Form.Label>لینک عکس غذا</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          value={src}\n                          onChange={(e) => setSrc(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"foodIngredients\" size=\"lg\">\n                        <Form.Label>مواد اولیه</Form.Label>\n                        {ingredients.map((ingredient, index) => (\n                          <Form.Check\n                            inline\n                            label={ingredient.Name}\n                            type=\"checkbox\"\n                            key={`inline-${ingredient.id}`}\n                            id={`ing-${index}`}\n                            value={ingredient.Name}\n                            onChange={(e) =>\n                              onIngredientChange(e, ingredient.Name)\n                            }\n                          />\n                        ))}\n                      </Form.Group>\n                      {/* <Form.Group>\n                        <Form.File \n                        id=\"foodImage\" \n                        label=\"فایل تصویر غذا\"\n                        onChange={onFileChange}\n                         />\n                      </Form.Group> */}\n                      <Button\n                        block\n                        size=\"lg\"\n                        type=\"submit\"\n                        varient=\"success\"\n                        onClick={handleCreateFood}\n                        disabled={!validateNewFood()}\n                      >\n                        اضافه کردن غذا به لیست\n                      </Button>\n                    </Form>\n                  </div>\n                </Card.Body>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n              مواد اولیه\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"2\">\n              <Card.Body>\n                <Card.Body>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>نام ماده غذایی</th>\n                        <th>نوع</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {ingredients.map((ingredient, index) => (\n                        <tr key={index}>\n                          <td>{ingredient.Id}</td>\n                          <td>{ingredient.Name}</td>\n                          <td>{ingredient.category}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n              اضافه کردن ماده اولیه\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"3\">\n              <Card.Body>\n                <Card.Body>\n                  <div className=\"col-md-6\">\n                    <Form onSubmit={handleCreateIng}>\n                      <Form.Group controlId=\"ingName\" size=\"lg\">\n                        <Form.Label>نام ماده غذایی</Form.Label>\n                        <Form.Control\n                          autoFocus\n                          type=\"text\"\n                          value={nIngName}\n                          onChange={(e) => setNIngName(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"ingcategory\" size=\"lg\">\n                        <Form.Label>نوع ماده غذایی</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          value={nIngCategory}\n                          onChange={(e) => setNIngCategory(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Button\n                        block\n                        size=\"lg\"\n                        type=\"submit\"\n                        varient=\"success\"\n                        disabled={!validateNewIng()}\n                      >\n                        اضافه کردن ماده غذایی به لیست\n                      </Button>\n                    </Form>\n                  </div>\n                </Card.Body>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n","/home/atena/Desktop/final-prj/final-react/src/Parse.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/TopDishes.js",["102","103","104","105","106","107","108"],"import Parse from \"../Parse.js\";\nimport React, { useEffect ,useState } from \"react\";\nimport { Accordion, Card, Form, Button } from \"react-bootstrap\";\nexport default function TopDishes() {\n\n\n  const [topDishes, setFoods] = useState([]);\n\n  \n  useEffect(() => {\n    \n    var scores = []\n    var names =[]\n    var Ingrdints =[]\n    var srcs  =[]\n    var links=[]\n    var tops=[]\n    const foods = Parse.Object.extend(\"Food\");\n\n    const query = new Parse.Query(foods);\n    query.find().then((resp) => {\n      console.log(resp);\n\n      \n      const fd = resp.map((x) => {\n        \n          scores.push(x.get('score'));\n          names.push(x.get('name'));\n          Ingrdints.push(x.get('Ingredients'));\n          srcs.push(x.get(\"imagesrc\"));\n          links.push(x.get('Link'));\n    \n        \n      });\n      var sorted_score = [];\n      sorted_score = scores.sort(function(a,b){return b-a});\n      var first = scores.indexOf(sorted_score[0])\n      var second = scores.indexOf(sorted_score[1])\n      var  third = scores.indexOf(sorted_score[2])\n\n\n      setFoods([\n        {Name : names[first] , Link:links[first] , Ingredients : Ingrdints[first] , src:srcs[first]},\n        {Name : names[second] , Link:links[second] , Ingredients : Ingrdints[second] , src:srcs[second]},\n        {Name : names[third] , Link:links[third] , Ingredients : Ingrdints[third] , src:srcs[third]\n        },\n\n        \n      ]);\n      \n    });\n\n  }, []);\n  return (\n    <>\n      <div className=\"TopDishes\" style={{ marginTop: \"5%\" }}>\n        <h2>محبوب ترین ها</h2>\n        <p>\n          استفاده از طراحان گرافیک است، چاپگرها و متون بلکه روزنامه و مجله در\n          ستون و سطرآنچنان که لازم است...\n        </p>\n\n\n        <div className=\"col-md-8\">\n            <div\n              className=\"container row\"\n              style={{ marginRight: \"auto\", marginLeft: \"auto\" }}\n            >\n              {topDishes.map((food, index) => (\n                <div className=\"col-md-6\">\n                  <div\n                    className=\"box\"\n                    style={{\n                      width: \"100%\",\n                      marginBottom: \"30px\",\n                      height: \"auto\",\n                    }}\n                  >\n                    <img  alt=\"\" src={food.src} />\n\n                    <div className=\"box-content\">\n                      <h3 className=\"title\">{food.Name}</h3>\n                      <span className=\"post\">{food.Ingredients}</span>\n                    </div>\n                    <ul className=\"icon\">\n                      {/* <li>\n                        <button onClick={function(){\n                          handelremove(index);\n                        }}>\n                          <i className=\"fa fa-minus\"></i>\n                        </button>\n                      </li> */}\n                      <li>\n                        <a href={food.Link}>\n                          <i className=\"fa fa-link\"></i>\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        \n        {/* <div\n          className=\"container row justify-content-center \"\n          style={{ marginRight: \"auto\", marginLeft: \"auto\", marginTop: \"5%\" }}\n        >\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4 \">\n            <div className=\"col-md-4 col-sm-6\">\n              <div className=\"box\">\n                <img alt=\"\" src=\"./d1.jpg\" />\n\n                <div className=\"box-content\">\n                  <h3 className=\"title\">Dish name</h3>\n                  <span className=\"post\">Ingredients</span>\n                </div>\n                <ul className=\"icon\">\n                  <li>\n                    <a href=\"/\">\n                      <i className=\"fa fa-heart\"></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"/\">\n                      <i className=\"fa fa-link\"></i>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4 \">\n            <div className=\"col-md-4 col-sm-6\">\n              <div className=\"box\">\n                <img alt=\"\" src=\"./d2.jpg\" />\n                <div className=\"box-content\">\n                  <h3 className=\"title\">Dish name</h3>\n                  <span className=\"post\">Ingredients</span>\n                </div>\n                <ul className=\"icon\">\n                  <li>\n                    <a href=\"/\">\n                      <i className=\"fa fa-heart\"></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"/\">\n                      <i className=\"fa fa-link\"></i>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4 \">\n            <div className=\"col-md-4 col-sm-6\">\n              <div className=\"box\">\n                <img alt=\"\" src=\"./d3.jpg\" />\n                <div className=\"box-content\">\n                  <h3 className=\"title\">Dish name</h3>\n                  <span className=\"post\">Ingredients</span>\n                </div>\n                <ul className=\"icon\">\n                  <li>\n                    <a href=\"/\">\n                      <i className=\"fa fa-heart\"></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"/\">\n                      <i className=\"fa fa-link\"></i>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div> */}\n      </div>\n    </>\n  );\n}\n","/home/atena/Desktop/final-prj/final-react/src/components/Middle.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/Footer.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/About.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/Header.js",[],"/home/atena/Desktop/final-prj/final-react/src/libs/hooksLib.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":33,"column":45,"nodeType":"115","messageId":"116","endLine":33,"endColumn":47},{"ruleId":"117","severity":1,"message":"118","line":13,"column":6,"nodeType":"119","endLine":13,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":40,"column":9,"nodeType":"123","messageId":"124","endLine":40,"endColumn":10},{"ruleId":"125","severity":1,"message":"126","line":52,"column":19,"nodeType":"123","messageId":"127","endLine":52,"endColumn":30},{"ruleId":"125","severity":1,"message":"128","line":89,"column":9,"nodeType":"123","messageId":"127","endLine":89,"endColumn":10},{"ruleId":"125","severity":1,"message":"129","line":110,"column":9,"nodeType":"123","messageId":"127","endLine":110,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":123,"column":11,"nodeType":"123","messageId":"124","endLine":123,"endColumn":12},{"ruleId":"125","severity":1,"message":"128","line":127,"column":13,"nodeType":"123","messageId":"127","endLine":127,"endColumn":14},{"ruleId":"125","severity":1,"message":"130","line":17,"column":9,"nodeType":"123","messageId":"127","endLine":17,"endColumn":16},{"ruleId":"125","severity":1,"message":"131","line":34,"column":13,"nodeType":"123","messageId":"127","endLine":34,"endColumn":17},{"ruleId":"125","severity":1,"message":"128","line":35,"column":11,"nodeType":"123","messageId":"127","endLine":35,"endColumn":12},{"ruleId":"125","severity":1,"message":"132","line":53,"column":10,"nodeType":"123","messageId":"127","endLine":53,"endColumn":22},{"ruleId":"125","severity":1,"message":"133","line":152,"column":12,"nodeType":"123","messageId":"127","endLine":152,"endColumn":24},{"ruleId":"125","severity":1,"message":"134","line":3,"column":10,"nodeType":"123","messageId":"127","endLine":3,"endColumn":19},{"ruleId":"125","severity":1,"message":"135","line":3,"column":21,"nodeType":"123","messageId":"127","endLine":3,"endColumn":25},{"ruleId":"125","severity":1,"message":"136","line":3,"column":27,"nodeType":"123","messageId":"127","endLine":3,"endColumn":31},{"ruleId":"125","severity":1,"message":"137","line":3,"column":33,"nodeType":"123","messageId":"127","endLine":3,"endColumn":39},{"ruleId":"125","severity":1,"message":"138","line":17,"column":9,"nodeType":"123","messageId":"127","endLine":17,"endColumn":13},{"ruleId":"125","severity":1,"message":"139","line":25,"column":13,"nodeType":"123","messageId":"127","endLine":25,"endColumn":15},{"ruleId":"140","severity":1,"message":"141","line":25,"column":31,"nodeType":"142","messageId":"143","endLine":25,"endColumn":33},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onLoad'. Either include it or remove the dependency array.","ArrayExpression",["146"],"no-redeclare","'i' is already defined.","Identifier","redeclared","no-unused-vars","'setAllFoods' is assigned a value but never used.","unusedVar","'j' is assigned a value but never used.","'allSelectedFood' is assigned a value but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'onFileChange' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'tops' is assigned a value but never used.","'fd' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Update the dependencies array to be: [onLoad]",{"range":"149","text":"150"},[327,329],"[onLoad]"]