[{"/home/atena/Desktop/final-prj/final-react/src/index.js":"1","/home/atena/Desktop/final-prj/final-react/src/reportWebVitals.js":"2","/home/atena/Desktop/final-prj/final-react/src/App.js":"3","/home/atena/Desktop/final-prj/final-react/src/Routes.js":"4","/home/atena/Desktop/final-prj/final-react/src/libs/contextLib.js":"5","/home/atena/Desktop/final-prj/final-react/src/containers/Signup.js":"6","/home/atena/Desktop/final-prj/final-react/src/containers/UserDashboard.js":"7","/home/atena/Desktop/final-prj/final-react/src/containers/Dashboard.js":"8","/home/atena/Desktop/final-prj/final-react/src/containers/Home.js":"9","/home/atena/Desktop/final-prj/final-react/src/components/AuthenticatedRoute.js":"10","/home/atena/Desktop/final-prj/final-react/src/components/UnauthenticatedRoute.js":"11","/home/atena/Desktop/final-prj/final-react/src/containers/Search.js":"12","/home/atena/Desktop/final-prj/final-react/src/containers/Login.js":"13","/home/atena/Desktop/final-prj/final-react/src/Parse.js":"14","/home/atena/Desktop/final-prj/final-react/src/components/About.js":"15","/home/atena/Desktop/final-prj/final-react/src/components/Header.js":"16","/home/atena/Desktop/final-prj/final-react/src/components/Middle.js":"17","/home/atena/Desktop/final-prj/final-react/src/components/Footer.js":"18","/home/atena/Desktop/final-prj/final-react/src/components/TopDishes.js":"19","/home/atena/Desktop/final-prj/final-react/src/libs/hooksLib.js":"20"},{"size":658,"mtime":1613281519184,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1613281519184,"results":"23","hashOfConfig":"22"},{"size":2674,"mtime":1613376727268,"results":"24","hashOfConfig":"22"},{"size":1118,"mtime":1613376727268,"results":"25","hashOfConfig":"22"},{"size":169,"mtime":1613281519184,"results":"26","hashOfConfig":"22"},{"size":2976,"mtime":1613382625375,"results":"27","hashOfConfig":"22"},{"size":6957,"mtime":1613382636975,"results":"28","hashOfConfig":"22"},{"size":8681,"mtime":1613382666039,"results":"29","hashOfConfig":"22"},{"size":492,"mtime":1613281519176,"results":"30","hashOfConfig":"22"},{"size":490,"mtime":1613281519176,"results":"31","hashOfConfig":"22"},{"size":840,"mtime":1613281519176,"results":"32","hashOfConfig":"22"},{"size":3977,"mtime":1613376727272,"results":"33","hashOfConfig":"22"},{"size":4181,"mtime":1613376727392,"results":"34","hashOfConfig":"22"},{"size":134,"mtime":1613384770144,"results":"35","hashOfConfig":"22"},{"size":1721,"mtime":1613281519176,"results":"36","hashOfConfig":"22"},{"size":1590,"mtime":1613281519176,"results":"37","hashOfConfig":"22"},{"size":1784,"mtime":1613281519176,"results":"38","hashOfConfig":"22"},{"size":4043,"mtime":1613281519176,"results":"39","hashOfConfig":"22"},{"size":3065,"mtime":1613281519176,"results":"40","hashOfConfig":"22"},{"size":290,"mtime":1613281519184,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1o18aca",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/atena/Desktop/final-prj/final-react/src/index.js",[],["88","89"],"/home/atena/Desktop/final-prj/final-react/src/reportWebVitals.js",[],"/home/atena/Desktop/final-prj/final-react/src/App.js",[],"/home/atena/Desktop/final-prj/final-react/src/Routes.js",[],"/home/atena/Desktop/final-prj/final-react/src/libs/contextLib.js",[],"/home/atena/Desktop/final-prj/final-react/src/containers/Signup.js",["90"],"import React, { useState } from \"react\";\nimport { Alert, Form, Button } from \"react-bootstrap\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport Cookies from \"js-cookie\";\nimport \"./Signup.css\";\n<<<<<<< HEAD\n\nimport Parse from \"../Parse.js\";\n\n=======\n>>>>>>> 90216ce9e0b3d6a499b45923462d2f40d5bc662e\n\nexport default function Signup() {\n  const [fields, handleFieldChange] = useFormFields({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const { userHasAuthenticated } = useAppContext();\n  const history = useHistory();\n  const [error, setError] = useState([]);\n\n  function validateForm() {\n    return (\n      fields.username.length > 0 &&\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    userHasAuthenticated(true);\n    Cookies.set(\"user\", \"true\");\n    history.push(\"/\");\n    alert(\"Signed up and logged in\");\n    //TODO\n  }\n\n  function handleClose() {\n    setError([]);\n  }\n\n  return (\n    <div className=\"Signup \">\n      <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 pt-3\" id=\"alert\">\n        {error.map((msg, index) => (\n          <Alert variant=\"danger\" key={index} onClose={handleClose} dismissible>\n            <Alert.Heading>Error</Alert.Heading>\n            <p>{msg}</p>\n          </Alert>\n        ))}\n      </div>\n\n      <Form\n        onSubmit={handleSubmit}\n        style={{\n          marginTop: \"15vh\",\n          backgroundColor: \"white\",\n          padding: \"25px\",\n        }}\n      >\n        <Form.Group controlId=\"username\" size=\"lg\">\n          <Form.Label>نام کاربری</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"text\"\n            value={fields.username}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"email\" size=\"lg\">\n          <Form.Label>ایمیل</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\" size=\"lg\">\n          <Form.Label>رمز عبور</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\" size=\"lg\">\n          <Form.Label>تکرار رمز عبور</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword}\n          />\n        </Form.Group>\n\n        <Button\n          block\n          size=\"lg\"\n          type=\"submit\"\n          varient=\"success\"\n          disabled={!validateForm()}\n        >\n          ثبت نام\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","/home/atena/Desktop/final-prj/final-react/src/containers/UserDashboard.js",["91","92","93","94","95"],"import React, { useState } from \"react\";\nimport { Accordion, Card, Form, Button } from \"react-bootstrap\";\nimport \"./Dashboard.css\";\nimport \"./Home.css\";\n\nexport default function Dashboard() {\n\n\n  const [Email, setEmail] = useState(Parse.User.current().getUsername());\n  const [Password, setPassword] = useState(\"aaaa\");\n\n  const [favoriteFoods, setFoods] = useState([]);\n \n  const [newEmail, setNEmail] = useState(\"\");\n  const [newPassword, setNPassword] = useState(\"\");\n  const [confirmedPassword, setCPassword] = useState(\"\");\n\n  function handleChangeEmail() {\n    setEmail(newEmail);\n    alert(\"Email updated\");\n  }\n\n  function validateNewEmail() {\n    return newEmail.length > 0;\n  }\n\n  function handleChangePassword() {\n    setPassword(newPassword);\n    alert(\"Password updated\");\n  }\n\n  function validateNewPassword() {\n    return newPassword.length > 0 && Password === confirmedPassword;\n  }\n   \n  \n  useEffect(() => {\n      \n    const favorits = Parse.Object.extend(\"Favorit\");\n\n    const query = new Parse.Query(favorits);\n\n    query.equalTo(\"username\", Parse.User.current().getUsername());\n\n    query.find().then((resp) => {\n      \n      const fd = resp.map((x) => {\n        \n        const food = x.get(\"food\");\n        return {\n            Name : food.Name,\n            Link : food.Link,\n            Ingredients : food.Ingredients,\n            src:food.imagesrc\n         }\n      });\n      setFoods(fd);\n\n      console.log(fd);\n\n    });\n\n  }, []);\n\n\n\n  return (\n    <div className=\"Dashboard\">\n      <h1 style={{ paddingTop: \"10%\" }}>It's User Dashboard</h1>\n      <div className=\"dashboard-nav container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <Accordion defaultActiveKey=\"0\">\n              <Card>\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                  ایمیل\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    <div className=\"col-md-6 pt-3\">\n                      <h6>آدرس ایمیل شما: </h6>\n                      <p>{Email}</p>\n                    </div>\n\n                    <Form\n                      onSubmit={handleChangeEmail}\n                      style={{\n                        backgroundColor: \"white\",\n                        padding: \"30px\",\n                      }}\n                    >\n                      <Form.Group controlId=\"newEmail\" size=\"lg\">\n                        <Form.Label>ایمیل جدید</Form.Label>\n                        <Form.Control\n                          autoFocus\n                          type=\"email\"\n                          value={newEmail}\n                          onChange={setNEmail}\n                        />\n                      </Form.Group>\n                      <Button\n                        block\n                        size=\"lg\"\n                        type=\"submit\"\n                        varient=\"success\"\n                        disabled={!validateNewEmail()}\n                      >\n                        تغییر\n                      </Button>\n                    </Form>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card>\n                <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                  تغییر رمز عبور\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"2\">\n                  <Card.Body>\n                    <Card.Body>\n                      <Form\n                        onSubmit={handleChangePassword}\n                        style={{\n                          backgroundColor: \"white\",\n                        }}\n                      >\n                        <Form.Group controlId=\"password\" size=\"lg\">\n                          <Form.Label>رمز عبور کنونی</Form.Label>\n                          <Form.Control\n                            autoFocus\n                            type=\"text\"\n                            value={newPassword}\n                            onChange={setNPassword}\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"newPassword\" size=\"lg\">\n                          <Form.Label>رمز عبور جدید</Form.Label>\n                          <Form.Control\n                            autoFocus\n                            type=\"password\"\n                            value={newPassword}\n                            onChange={setNPassword}\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"confirmPassword\" size=\"lg\">\n                          <Form.Label>تکرار رمز عبور</Form.Label>\n                          <Form.Control\n                            type=\"password\"\n                            value={confirmedPassword}\n                            onChange={setCPassword}\n                          />\n                        </Form.Group>\n                        <Button\n                          block\n                          size=\"lg\"\n                          type=\"submit\"\n                          varient=\"success\"\n                          disabled={!validateNewPassword()}\n                        >\n                          تغییر رمز عبور\n                        </Button>\n                      </Form>\n                    </Card.Body>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          </div>\n          <div className=\"col-md-8\">\n            <h4>غذاهای محبوب شما</h4>\n            <div\n              className=\"container row\"\n              style={{ marginRight: \"auto\", marginLeft: \"auto\" }}\n            >\n              {favoriteFoods.map((food, index) => (\n                <div className=\"col-md-6\">\n                  <div\n                    className=\"box\"\n                    style={{\n                      width: \"100%\",\n                      marginBottom: \"30px\",\n                      height: \"auto\",\n                    }}\n                  >\n                    <img  alt=\"\" src={food.src} />\n\n                    <div className=\"box-content\">\n                      <h3 className=\"title\">{food.Name}</h3>\n                      <span className=\"post\">{food.Ingredients}</span>\n                    </div>\n                    <ul className=\"icon\">\n                      <li>\n                        <a href=\"/\">\n                          <i className=\"fa fa-minus\"></i>\n                        </a>\n                      </li>\n                      <li>\n                        <a href=\"/\">\n                          <i className=\"fa fa-link\"></i>\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/atena/Desktop/final-prj/final-react/src/containers/Dashboard.js",["96"],"import React, { useState } from \"react\";\nimport { Accordion, Card, Table, Form, Button } from \"react-bootstrap\";\nimport \"./Dashboard.css\";\n\nimport Parse from \"../Parse.js\";\n\n\nexport default function Dashboard() {\n  const [nFoodName, setNFoodName] = useState(\"\");\n  const [nFoodLink, setNFoodLink] = useState(\"\");\n  const [nFoodIngredients, setNFoodIngredients] = useState([]);\n  const [nIngName, setNIngName] = useState(\"\");\n  const [nIngCategory, setNIngCategory] = useState(\"\");\n\n  const [foods, setFoods] = useState([\n    { Id: \"1\", Name: \"food 1\", link: \"www.google.com\", Ingredients: \"egg\" },\n    { Id: \"2\", Name: \"food 2\", link: \"www.google.com\", Ingredients: \"egg\" },\n    { Id: \"3\", Name: \"food 3\", link: \"www.google.com\", Ingredients: \"egg\" },\n  ]);\n\n  const [ingredients, setIngredients] = useState([\n    { Id: \"1\", Name: \"Ingredient 1\", category: \"dairy\" },\n    { Id: \"2\", Name: \"Ingredient 2\", category: \"dairy\" },\n    { Id: \"3\", Name: \"Ingredient 3\", category: \"dairy\" },\n  ]);\n\n  function handleCreateFood() {\n    setFoods([\n      ...foods,\n      {\n        Id: foods.length,\n        Name: nFoodName,\n        link: nFoodLink,\n        Ingredients: nFoodIngredients.toString,\n      },\n    ]);\n    alert(\"New food created\");\n  }\n\n  function validateNewFood() {\n    return (\n      nFoodIngredients.length > 0 &&\n      nFoodLink.length > 0 &&\n      nFoodName.length > 0\n    );\n  }\n  function handleCreateIng() {\n    setIngredients([\n      ...ingredients,\n      {\n        Id: ingredients.length,\n        Name: nIngName,\n        category: nIngCategory,\n      },\n    ]);\n    alert(\"New ingredient created\");\n  }\n\n  function validateNewIng() {\n    return nIngName.length > 0 && nIngCategory.length > 0;\n  }\n\n  function onIngredientChange(e, name) {\n    if (nFoodIngredients.includes(name)) {\n      var arr = nFoodIngredients.filter(function (item) {\n        return item !== name;\n      });\n      setNFoodIngredients(arr);\n    } else {\n      setNFoodIngredients([...nFoodIngredients, name]);\n    }\n  }\n\n  return (\n    <div className=\"Dashboard\">\n      <h1 style={{ paddingTop: \"10%\" }}>It's Admin Dashboard</h1>\n      <div className=\"dashboard-nav container\">\n        <Accordion defaultActiveKey=\"0\">\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              غذاها\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>نام غذا</th>\n                      <th>لینک دستور غذایی</th>\n                      <th>مواد اولیه</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {foods.map((food, index) => (\n                      <tr key={index}>\n                        <td>{food.Id}</td>\n                        <td>{food.Name}</td>\n                        <td>{food.link}</td>\n                        <td>{food.Ingredients}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n              اضافه کردن غذا\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"1\">\n              <Card.Body>\n                <Card.Body>\n                  <div className=\"col-md-6\">\n                    <Form onSubmit={handleCreateFood}>\n                      <Form.Group controlId=\"foodName\" size=\"lg\">\n                        <Form.Label>نام غذا</Form.Label>\n                        <Form.Control\n                          autoFocus\n                          type=\"text\"\n                          value={nFoodName}\n                          onChange={(e) => setNFoodName(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"foodLink\" size=\"lg\">\n                        <Form.Label>لینک دستور غذایی</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          value={nFoodLink}\n                          onChange={(e) => setNFoodLink(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"foodIngredients\" size=\"lg\">\n                        <Form.Label>مواد اولیه</Form.Label>\n                        {ingredients.map((ingredient, index) => (\n                          <Form.Check\n                            inline\n                            label={ingredient.Name}\n                            type=\"checkbox\"\n                            key={`inline-${ingredient.id}`}\n                            id={`ing-${index}`}\n                            value={ingredient.Name}\n                            onChange={(e) =>\n                              onIngredientChange(e, ingredient.Name)\n                            }\n                          />\n                        ))}\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.File id=\"foodImage\" label=\"فایل تصویر غذا\" />\n                      </Form.Group>\n                      <Button\n                        block\n                        size=\"lg\"\n                        type=\"submit\"\n                        varient=\"success\"\n                        disabled={!validateNewFood()}\n                      >\n                        اضافه کردن غذا به لیست\n                      </Button>\n                    </Form>\n                  </div>\n                </Card.Body>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n              مواد اولیه\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"2\">\n              <Card.Body>\n                <Card.Body>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>#</th>\n                        <th>نام ماده غذایی</th>\n                        <th>نوع</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {ingredients.map((ingredient, index) => (\n                        <tr key={index}>\n                          <td>{ingredient.Id}</td>\n                          <td>{ingredient.Name}</td>\n                          <td>{ingredient.category}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n              اضافه کردن ماده اولیه\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"3\">\n              <Card.Body>\n                <Card.Body>\n                  <div className=\"col-md-6\">\n                    <Form onSubmit={handleCreateIng}>\n                      <Form.Group controlId=\"ingName\" size=\"lg\">\n                        <Form.Label>نام ماده غذایی</Form.Label>\n                        <Form.Control\n                          autoFocus\n                          type=\"text\"\n                          value={nIngName}\n                          onChange={(e) => setNIngName(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"ingcategory\" size=\"lg\">\n                        <Form.Label>نوع ماده غذایی</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          value={nIngCategory}\n                          onChange={(e) => setNIngCategory(e.target.value)}\n                        />\n                      </Form.Group>\n                      <Button\n                        block\n                        size=\"lg\"\n                        type=\"submit\"\n                        varient=\"success\"\n                        disabled={!validateNewIng()}\n                      >\n                        اضافه کردن ماده غذایی به لیست\n                      </Button>\n                    </Form>\n                  </div>\n                </Card.Body>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n","/home/atena/Desktop/final-prj/final-react/src/containers/Home.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/AuthenticatedRoute.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/UnauthenticatedRoute.js",[],"/home/atena/Desktop/final-prj/final-react/src/containers/Search.js",[],"/home/atena/Desktop/final-prj/final-react/src/containers/Login.js",["97","98","99"],"import React, { useState } from \"react\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport Cookies from \"js-cookie\";\nimport \"./Login.css\";\nimport { useHistory } from \"react-router-dom\";\n\n\nimport Parse from \"../Parse.js\";\n\n\nexport default function Login() {\n  const { userHasAuthenticated } = useAppContext();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState([]);\n  const history = useHistory();\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    // event.preventDefault();\n    // userHasAuthenticated(true);\n    // Cookies.set(\"user\", \"true\");\n    // alert(\"Logged in\");\n\n    event.preventDefault();\n    //\n    // alert(\"log in!\");\n\n    try {\n      const user = await Parse.User.logIn(username, password);\n      console.log(\"login successfully\");\n      userHasAuthenticated(true);\n      Cookies.set(\"user\", username);\n     // history.push(\"/dashboard\");\n    } catch (error) {\n      console.log(\"wrong email or password.\");\n      setError(\"wrong email or password\");\n    }\n  }\n\n  function handleClose() {\n    setError([]);\n  }\n\n  return (\n    <div className=\"Login\">\n      {error.map((msg, index) => (\n        <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-4 pt-3\" id=\"alert\">\n          <Alert variant=\"danger\" key={index} onClose={handleClose} dismissible>\n            <Alert.Heading>Error</Alert.Heading>\n            <p>{msg}</p>\n          </Alert>\n        </div>\n      ))}\n\n      <div style={{ marginTop: \"15vh\", width: \"auto\" }}>\n        <Form onSubmit={handleSubmit} style={{ backgroundColor: \"white\" }}>\n          <Form.Group size=\"xl\" controlId=\"username\">\n            <Form.Label>نام کاربری</Form.Label>\n            <Form.Control\n              autoFocus\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group size=\"xl\" controlId=\"password\">\n            <Form.Label>رمز عبور</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Button block size=\"xl\" type=\"submit\" disabled={!validateForm()}>\n            ورود\n          </Button>\n          <p className=\"m-3\">\n            حساب کاربری ندارید؟\n            <a href=\"/signup\">همین حالا ثبت نام کنید </a>\n          </p>\n        </Form>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-offset-3 col-md-6\">\n            <form className=\"form-horizontal\">\n              <span className=\"heading\">Log In</span>\n              <div className=\"form-group\">\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"inputEmail3\"\n                  placeholder=\"Email or Username\"\n                />\n                <i className=\"fa fa-user\"></i>\n              </div>\n              <div className=\"form-group help\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"inputPassword3\"\n                  placeholder=\"Password\"\n                />\n                <i className=\"fa fa-lock\"></i>\n                <a href=\"/\" className=\"fa fa-question-circle\"></a>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"main-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    value=\"None\"\n                    id=\"checkbox1\"\n                    name=\"check\"\n                  />\n                  <label for=\"checkbox1\"></label>\n                </div>\n                <span className=\"text\">Remember me</span>\n                <button type=\"submit\" className=\"btn btn-default\">\n                  log in\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/atena/Desktop/final-prj/final-react/src/Parse.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/About.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/Header.js",[],["100","101"],"/home/atena/Desktop/final-prj/final-react/src/components/Middle.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/Footer.js",[],"/home/atena/Desktop/final-prj/final-react/src/components/TopDishes.js",[],"/home/atena/Desktop/final-prj/final-react/src/libs/hooksLib.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":null,"fatal":true,"severity":2,"message":"106","line":8,"column":2},{"ruleId":"107","severity":2,"message":"108","line":9,"column":38,"nodeType":"109","messageId":"110","endLine":9,"endColumn":43},{"ruleId":"107","severity":2,"message":"111","line":37,"column":3,"nodeType":"109","messageId":"110","endLine":37,"endColumn":12},{"ruleId":"107","severity":2,"message":"108","line":39,"column":22,"nodeType":"109","messageId":"110","endLine":39,"endColumn":27},{"ruleId":"107","severity":2,"message":"108","line":41,"column":23,"nodeType":"109","messageId":"110","endLine":41,"endColumn":28},{"ruleId":"107","severity":2,"message":"108","line":43,"column":31,"nodeType":"109","messageId":"110","endLine":43,"endColumn":36},{"ruleId":"112","severity":1,"message":"113","line":5,"column":8,"nodeType":"109","messageId":"114","endLine":5,"endColumn":13},{"ruleId":"112","severity":1,"message":"115","line":17,"column":9,"nodeType":"109","messageId":"114","endLine":17,"endColumn":16},{"ruleId":"112","severity":1,"message":"116","line":34,"column":13,"nodeType":"109","messageId":"114","endLine":34,"endColumn":17},{"ruleId":"117","severity":1,"message":"118","line":110,"column":17,"nodeType":"119","endLine":110,"endColumn":63},{"ruleId":"102","replacedBy":"120"},{"ruleId":"104","replacedBy":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  6 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mCookies\u001b[39m from \u001b[32m\"js-cookie\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  7 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[32m\"./Signup.css\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mParse\u001b[39m from \u001b[32m\"../Parse.js\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m\u001b[0m","no-undef","'Parse' is not defined.","Identifier","undef","'useEffect' is not defined.","no-unused-vars","'Parse' is defined but never used.","unusedVar","'history' is assigned a value but never used.","'user' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["122"],["123"],"no-global-assign","no-unsafe-negation"]